apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

ext.versionMajor = 1
ext.versionMinor = 0
ext.versionPatch = 0

def computeVersionName() {
    return String.format('%d.%d.%d', versionMajor, versionMinor, versionPatch)
}

def computeVersionCode() {
    return (versionMajor * 1000000) + (versionMinor * 100000) + (versionPatch * 10000) + Integer.valueOf(System.env.BUILD_NUMBER ?: 0)
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.example.pokedex"
        minSdkVersion 24
        targetSdkVersion 30
        versionName computeVersionName()
        versionCode computeVersionCode()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.13'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.3.2"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.3'
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mock_webserver_version"

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$androidCoroutines"

    implementation 'com.google.android.gms:play-services-maps:17.0.0'

    //AndroidX
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.core:core-ktx:$corektx"
    implementation "androidx.constraintlayout:constraintlayout:$constraint"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"

    implementation "com.google.code.gson:gson:$gson"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpInterceptor"

    //Layouts
    implementation "com.google.android.material:material:$material_design"

    implementation project(':core')
}